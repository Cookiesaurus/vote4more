// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  firstName   String
  lastName    String
  password    String
  email       String
  derivedType Int? // Identifier of what derived table to search
  employee    Employee?
  voter       Voter?
  ballots     Ballot[] // Ballots this candidate is in
}

model Employee {
  id      Int       @id @default(autoincrement())
  userId  Int       @unique
  user    User      @relation(fields: [userId], references: [id])
  ballots Ballot[] // many to many
}

model Voted {
  id        Int       @id @default(autoincrement())
  voterId   Int
  voter     Voter     @relation(fields: [voterId], references: [id])
  timestamp DateTime
}

model Ballot {
  id                 Int        @id @default(autoincrement())
  title              String
  creationDate       DateTime   @default(now())
  openingDate        DateTime
  completionDate     DateTime
  autoCompletionDate DateTime
  ownerId            Int
  contributors       Employee[] // many to many
  status             Int
  location           String
  content            Bytes      // json
  enableWriteIn      Boolean
  candidates         User[]     // many to many
  groups             Group[]    // many to many
  votes              Vote[]
}

model Group {
  id        Int      @id @default(autoincrement())
  groupName String
  ballots   Ballot[] // many to many
  voters    Voter[] // many to many
}

model Voter {
  id      Int     @id @default(autoincrement())
  userId  Int     @unique
  user    User    @relation(fields: [userId], references: [id])
  groups  Group[] // many to many
  Voted   Voted[]
}

model Vote {
  id        Int     @id @default(autoincrement())
  ballotId  Int 
  ballot    Ballot  @relation(fields: [ballotId], references: [id])
  content   String // json
}