// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique // Added mod, Make this unique across db
  password  String
  role      String
  email     String  @unique // Added mod
  courses   Course[] // Implicit many to many with Course
//  auth      Auth[]
}

model Student {
  id                  Int     @id @default(autoincrement())
  first_name          String
  last_name           String
  email               String  @unique
  courses             Course[] // Implicit many to many with Course
  // Student can have many login failed login attempts
  logins       LoginAttempt[] 
  acquisitions AcquisitionAttempt[]
}

model Course {
  id          Int     @id @default(autoincrement())
  name        String
  professors  User[] // Implicit many to many with User (Professor)
  students    Student[] // Implicit many to many with Student

  // ADDED BELOW ------

  acquisitions AcquisitionAttempt[]
}

model LoginAttempt {
  id              Int     @id @default(autoincrement())
  login_timestamp DateTime
  status          Boolean // True: Success, False: Failure
  // Each login attempt can only be associated with a single student one to many
  student         Student @relation(fields: [student_id], references: [id])
  student_id      Int
}

model AcquisitionAttempt {
  id              Int     @id @default(autoincrement())
  start_time      DateTime
  finished_time   DateTime
  status          Boolean // True: Success, False: Failure
  file_name       String?
  file_ext        String?
  url             String?
  http_code       String?
  // Each acquisition attempt can only be associated with a single student one to many
  student         Student @relation(fields: [student_id], references: [id])
  student_id      Int

  // ADDED BELOW ------

  // Each acquisition attempt occurs when a student is accessing a course's materials
  course          Course @relation(fields: [course_id], references: [id])
  course_id       Int
}

model StudentHelpRequest {
  id          Int    @id @default(autoincrement())
  email       String
  description String @db.VarChar(2048)
}